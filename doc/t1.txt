1. Rest 接口写法
1) 请求 -> 响应
   资源    结果

   资源: uri

   动作:   post  上传，新增资源
           get    查询资源
           put    修改某一资源
           patch 修改多个资源
           delete  删除资源

   结果：json 数据

        jsonify ({})

        json.dumps(obj, cls)   cls 自定义JSONEncoder

            如果数据是list[xxxModel]包含object类对象,
            则自定义object转json的编码器（JSONEncoder）或
            声明@propery def json(self): return {}

2. flask-restful 扩展库
1） pip install flask-restful

2)from flask-restful import API

  api = API(APP)

3) 创建Resource的子类 Resource 是 flask-restful 中的子类
  class UserApi(Resource):
      def get(self):
        pass
      def post(self):
         pass
      def put(self):
         pass
      def patch(self):
         pass
      def delete(self):
         pass

4)  将Resource 资源添加到api 对象中
     api.add_source(UserApi,'/user/',endpoint='user')



